import { State, Tile } from "./world"

const LEVEL1 = `
####################
####################
####################
####################
####################
####################
####################
#####.....#...######
#####.s...^...######
#####.....#...######
############x#######
##!.########.#######
###.###++.##.#######
###.++^.#.^..#######
#######...##########
####################
####################
####################
`

const LEVEL2 = `
####################
####.......#########
####.s.....###.#####
####.......^x...####
####...x...#....####
#####......###^#####
#####...........####
####............####
####......###...####
####..+...###...####
####............####
########^###########
######.....#.....###
######.....#.....###
######..+..^..!.+###
######.....#.....###
######.....#.....###
####################
`

const LEVEL3 = `
####################
#...............x.##
#+#.......!.....#.##
#+#.###########.#.##
#+#..^........^.#..#
#+########^#######.#
#+^..............^.#
#.###.##....##.###.#
#...^.#......#.^...#
###.#.#..s...#.#####
#...#.########.#..x#
#.#.#..........#.#.#
#.#.#..#######.#.#.#
#.#.^..#.....#.^.#.#
#.#.#....#.#...#.#.#
#.#.######.#####.#.#
#......^..........x#
####################
`

const LEVEL4 = `
####################
####################
#...............x..#
#^##.#####.####.##+#
#+##.#####.####^##+#
#.##x#####!####.##+#
#.##.##########.##.#
#+##x##########.##.#
#.##.##########.##.#
#.##.##########.##.#
#.##x##########.##.#
#+##.##########.##.#
#.##.##########.##.#
#.##.##########.##.#
#+##.###....###.##.#
#......x..s.x......#
########....########
####################
`


const LEVEL5 = `
####################
#..................#
#.!.......!........#
#..................#
#.....!.......!....#
#..................#
#..................#
####^#########^#####
####^#########^#####
####^#########^#####
#..+...........+...#
#..................#
#..................#
#........s.........#
#..................#
#..................#
#..................#
####################
`

const LEVEL6 = `
####################
####################
####################
####################
####################
####################
####################
####.+.#####.x.#####
#s.+.#.......#....!#
####.x.#####.+.#####
####################
####################
####################
####################
####################
####################
####################
####################
`

const END = `
####################
#.###.#...##.#.#####
##.#.##.#.##.#.#####
###.###.#.##.#.#####
###.###.s.##...#####
#################.##
#.#.#.##.##.##.##.##
#.#.#.##.##..#.##.##
#.#.#.##.##.#..#####
#.....##.##.##.##+##
####################
####################
####################
####################
####################
####################
####################
####################
`
const LEVEL7 = `
####################
#....#............##
#....^.##########.##
#....#.........##.##
##############.##.##
#....#######...##..#
#....#.+.#####.##.##
#....#+#.+.s##.##.##
#....#.x.#####.#..##
#....#.###.#.#.##.##
#....#.#.#...#.##..#
#....#.#.#.#...##.##
##^###...#.######.##
#....###.#x#....#..#
#.##.....#.#.##!##.#
#.########.#.####..#
#..........#......##
####################
`

const LOOPS = `
####################
#########s##########
#########x##########
#########.##########
#########.##########
#########.##########
########++.#########
#######+++++########
######+.+++++#######
######++++.++#######
######+.+++++#######
######++++++.#######
#########.##########
#########!##########
####################
####################
####################
####################
`

const ROOMS = `
####################
#......#############
#..s...#############
#....+.^...^......##
#......#####......##
####^#######......##
####x#######......##
####.#######......##
####^#########^#####
###.............####
###.+...........####
###.............####
###########....#####
#.....#.+.#....#####
#..!..^.#.^....#####
#.....#+.+#....#####
#.....##############
####################
`

const LEVELS = [
   LEVEL1, LEVEL2, ROOMS,LOOPS, LEVEL4, LEVEL5, LEVEL6, LEVEL7, LEVEL3, END
]

const CHAR_MAP: { [id: string]: Tile } = {
    "#": Tile.WALL,
    ".": Tile.EMPTY,
    "^": Tile.DOOR_CLOSED,
    "!": Tile.FLAG,
    "x": Tile.MULTIPLY,
    "+": Tile.PLUS
}

export function loadLevel(state: State, levelNum: number) {
    const level = LEVELS[levelNum % LEVELS.length];
    if (level) {
        const lines = level.split(/[\r\n]+/).map(a => a.trim()).filter(a => a.length > 0);
        lines.forEach((line, y) => {
            line.split("").forEach((char, x) => {
                state.tiles.set(x, y, CHAR_MAP[char] | Tile.EMPTY);
                if (char == "s") {
                    state.path = [[x, y]]
                }
            })
        })
    }
}